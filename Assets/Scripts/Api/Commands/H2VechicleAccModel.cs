using System;
using System.Collections;
using System.Collections.Generic;
using DataType = System.Collections.Generic.SortedList<double, System.Collections.Generic.SortedList<double, double>>;
using DataPair = System.Collections.Generic.SortedList<double, double>;
using UnityEngine;


public class H2VechicleAccModel
{
    public double[] axTable  = new double[] {0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.1,4.2,4.3,4.4,4.5,4.6,4.7,4.8,4.9,5};
    public double[] vxTable  = new double[] {0,1.38889,2.77778,4.16667,5.55556,6.94445,8.33334,9.72223,11.11112,12.50001,13.8889,15.27779,16.66668,18.05557,19.44446,20.83335,22.22224,23.61113,25.00002,26.38891,27.7778,29.16669,30.55558,31.94447,33.33336,34.72225,36.11114,37.50003,38.88892,40.27781};
    public double[,] ThrTable = new double[,] { 
        { 0           ,0           ,0           ,0.0084949024,0.0206403899,0.0327858774,0.0449313649,0.0547311346,0.062850837 ,0.0709705395,0.0790902419,0.0872099444,0.0953296469,0.1041208262,0.1138211725,0.1235215187,0.1332218649,0.1429222112,0.1518677493,0.1587762023,0.1656846554,0.1725931084,0.1795015615,0.1864100145,0.1933184676,0.2005148833,0.2161901757,0.2318654681,0.2475407605,0.264582477 ,0.2818784574,0.2991744378,0.3197962549,0.340584776 ,0.374346193 ,0.4154407657,0.4516150239,0.4826234687,0.5168059129,0.5546592963,0.5900404384,0.8724796207,1           ,1,1,1,1,1,1,1,1 },
        { 0           ,0           ,0.0069296614,0.0182233582,0.029517055 ,0.0408107518,0.0516015136,0.0601961687,0.0687908237,0.0773854787,0.0859801338,0.0945747888,0.103667484 ,0.1136126863,0.1235578885,0.1335030907,0.1434482929,0.1524064702,0.1594590317,0.1665115932,0.1735641547,0.1806167162,0.1876692776,0.1947218391,0.2040080814,0.2199386671,0.2358692527,0.2519539913,0.2692490034,0.2865440155,0.3046012147,0.3253299186,0.3460586225,0.386506502 ,0.4267850627,0.4620102984,0.4925919508,0.5296432743,0.568436962 ,0.6066951797,0.6441183075,0.8505015855,1           ,1,1,1,1,1,1,1,1 },
        { 0           ,0.0097922249,0.0197332501,0.0296742752,0.0396153004,0.0495563256,0.0588216531,0.0680554149,0.0772891767,0.0865229385,0.0957567003,0.1056361523,0.1160646228,0.1264930934,0.1369215639,0.1473500345,0.1555342781,0.1629539629,0.1703736478,0.1777933326,0.1852130174,0.1926327023,0.2001160157,0.2165475345,0.2329790534,0.2494105722,0.2668681092,0.2843638206,0.3022015823,0.3229155297,0.3436294771,0.3823678678,0.4242449467,0.4607930694,0.4926858819,0.5301849713,0.5684118372,0.6062350917,0.6471717638,0.6854788056,0.7409222259,0.7977793548,0.9843955181,1,1,1,1,1,1,1,1 },
        { 0.0158235428,0.0247378555,0.0336521681,0.0425664808,0.0515653202,0.0609884802,0.0704116402,0.0798348001,0.0892579601,0.09868112  ,0.1087445788,0.1189122389,0.1290798991,0.1392475592,0.1494152193,0.1574404307,0.1653349024,0.1732293741,0.1811238457,0.1890183174,0.1969127891,0.2107687919,0.2284532751,0.2461377583,0.265553611 ,0.2854532468,0.3062452225,0.3294621812,0.3553026772,0.4010678033,0.4401733494,0.4736514419,0.5065409066,0.5459665435,0.5837155579,0.6248983539,0.6700159944,0.7245758161,0.7805168637,0.8371703992,0.8955619992,0.9562388402,1           ,1,1,1,1,1,1,1,1 },
        { 0.0214021517,0.03095086  ,0.0404995682,0.0500545675,0.0608475945,0.0716406214,0.0824336484,0.0932266754,0.1037062771,0.1136577473,0.1236092175,0.1335606878,0.143512158 ,0.1525481979,0.1598695135,0.1671908291,0.1745121447,0.1818334603,0.1891547759,0.1964760916,0.2125148269,0.2366431317,0.2619505627,0.2887201416,0.3141269597,0.3385413938,0.3643597093,0.3914196687,0.419574546 ,0.4482378078,0.4799427282,0.5184263759,0.5694323111,0.627785947 ,0.6901955433,0.7527094271,0.8131820615,0.8690379738,0.930256244 ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0278186958,0.0387615648,0.0497044338,0.0581857142,0.0665986616,0.075011609 ,0.0834245563,0.0918375037,0.1003663449,0.1126723048,0.1249782647,0.1372842246,0.1495901845,0.1587149098,0.1677300433,0.1767451768,0.1857603103,0.1947754438,0.2077381561,0.2261418199,0.2445454836,0.2613018013,0.277364214 ,0.2934266268,0.3088408349,0.3238060102,0.3387711855,0.3613490976,0.4064629349,0.4496316307,0.4919240956,0.5491766032,0.6105310414,0.6780345246,0.7627080932,0.8401374412,0.9133205117,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.035910236 ,0.0485018728,0.0556934484,0.0621557706,0.0686180929,0.0750804151,0.0815427374,0.0880050597,0.0944673819,0.1022232293,0.117676773 ,0.1331303168,0.1485838606,0.160046991 ,0.1711075554,0.1821681199,0.1932286843,0.2070196276,0.2251209429,0.2432222581,0.2594310557,0.274507084 ,0.2895831123,0.3043597505,0.3184670137,0.3325742769,0.3466815401,0.3819709739,0.426516332 ,0.4714226357,0.5228592473,0.5899537445,0.6588488653,0.7355759862,0.8424775347,0.9321427448,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0246581132,0.041087654 ,0.058481253 ,0.0770178342,0.0955544155,0.1127111001,0.1294324396,0.146153779 ,0.1595934476,0.1720527731,0.1845120987,0.1969714243,0.2297143451,0.2708792648,0.315400234 ,0.3657969757,0.4188269437,0.4644359057,0.5187557785,0.5529634969,0.5580735363,0.5631835756,0.5682936149,0.5734036542,0.5785136935,0.5836237328,0.5887337722,0.5938438115,0.5989538508,0.6502538654,0.7329497381,0.8443718522,0.9240307929,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0291789962,0.0469118584,0.0659854799,0.0853418282,0.1039558163,0.1202536623,0.1365515084,0.1522746706,0.1652854182,0.1782961658,0.1913069134,0.2143411951,0.2563835949,0.2928905188,0.3230630599,0.3529346536,0.4025831085,0.4598971686,0.5358401472,0.6349648285,0.6540017006,0.658714992 ,0.6634282834,0.6681415749,0.6728548663,0.6775681577,0.6822814492,0.6869947406,0.691708032 ,0.6964213235,0.7306696617,0.8437071024,0.9216583492,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0346595246,0.0525860588,0.0655973095,0.0786085603,0.0916198111,0.1080947899,0.1308375961,0.1525367774,0.1686504519,0.1847641264,0.2017926047,0.2346992104,0.2641595067,0.2906246988,0.3160314258,0.340857492 ,0.3945296657,0.4658086534,0.5539334893,0.6568383603,0.7506144455,0.7552676688,0.7599208921,0.7645741155,0.7692273388,0.7738805621,0.7785337855,0.7831870088,0.7878402322,0.7924934555,0.7971466788,0.8366486948,0.923326755 ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0305908193,0.0558342211,0.0821157463,0.1077692905,0.1320853799,0.1550815185,0.1743837524,0.1936859863,0.2338829884,0.288807124 ,0.3499674227,0.442976794 ,0.5179488381,0.560123151 ,0.5752268528,0.5903305546,0.6416825786,0.7634414617,0.8872361079,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0287247591,0.0500635712,0.0888648966,0.1178321031,0.1428412727,0.1630271669,0.1812787386,0.1995303102,0.2561565764,0.3203830049,0.401524401 ,0.4693039846,0.5569284464,0.6090059985,0.6236704151,0.6383348317,0.6757829139,0.8262647681,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0403825107,0.068841123 ,0.0977668473,0.1242781559,0.150404277 ,0.168509461 ,0.1866146449,0.2162996823,0.2812100436,0.3377158467,0.4004420339,0.4750220337,0.5883960227,0.6582673215,0.6730244909,0.6877816603,0.7259206902,0.8769678215,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0417596293,0.0761698578,0.1106927879,0.1445472679,0.172866813 ,0.2002758682,0.2630091448,0.3388111717,0.4514923822,0.4723705179,0.4932486536,0.5996870439,0.7038584442,0.7153653971,0.7268723501,0.738379303 ,0.7498862559,0.9055125826,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0           ,0.0676766659,0.1209341334,0.1536262729,0.1789642903,0.2126932925,0.2908862391,0.3926068199,0.4927185147,0.5629331039,0.5867959683,0.6712121727,0.8392832759,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0           ,0.0795956944,0.1269955313,0.1585928158,0.1837306117,0.2277703378,0.3126885533,0.4186586849,0.5157224748,0.5684967031,0.5928628905,0.7152110092,0.8887688493,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0022009727,0.0921405132,0.1325501211,0.1628393704,0.187909191 ,0.2423232821,0.3335983082,0.4285728598,0.5378625433,0.6153554489,0.640380682 ,0.7567127898,0.9292641948,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0250673684,0.1051980935,0.1425898942,0.1700683233,0.1950966197,0.2705395467,0.3457008179,0.4384923049,0.5768805907,0.6216214074,0.6463409137,0.8207577366,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0734199249,0.1113687667,0.1415548686,0.1676265461,0.1921000035,0.2309499871,0.2759560412,0.3198582218,0.3867188435,0.5972969234,0.6927386036,0.8802335281,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0859386127,0.1203746031,0.1509656639,0.1746049638,0.1982442636,0.2438980367,0.2872858189,0.3298538095,0.4155470271,0.6269090081,0.7448693294,0.9379107911,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.0976068754,0.1289348557,0.1572967729,0.1806306208,0.2081927804,0.2557485156,0.2989701127,0.3399115704,0.4416280133,0.6607557806,0.8033562894,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.1069835046,0.1376968145,0.1592217572,0.1746062641,0.1899907711,0.2630346429,0.3102893901,0.3515746653,0.4694759587,0.7000133509,0.9260924182,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.112545929 ,0.15931206  ,0.1950679677,0.2956500612,0.437037138 ,0.5889880588,0.8441254627,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.1237426531,0.1678947175,0.2127179579,0.3321801945,0.4685597928,0.65962228  ,0.9236892499,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.1361090294,0.1770942272,0.2429716073,0.3741643039,0.5025347036,0.7482580174,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.1501685584,0.1868523143,0.2794664802,0.4001658259,0.5638741286,0.8325029048,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.1591144487,0.1967141813,0.3113019054,0.4259350913,0.6401214382,0.9164555362,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.1679659723,0.2227275802,0.3259884788,0.4588007408,0.7190029821,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.178121609 ,0.2529811293,0.3381209805,0.5066291883,0.8002670158,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },
        { 0.1895015004,0.2743590487,0.3496968253,0.5858192799,0.885853053 ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1           ,1,1,1,1,1,1,1,1 },

    };

    public double kDoubleEpsilon = 1.0e-6;
    private  DataType xyz_ = new DataType();
    
    public bool Init()
    {
        for (int i = 0; i < vxTable.Length; i++) 
        {
            DataPair item = new DataPair();
            for(int j = 0; j < axTable.Length; j++) {
                item.Add(axTable[j], ThrTable[i , j]);
            }
            xyz_.Add(vxTable[i], item);
        }
        //Debug.Log("interpolate2d Tables is created successfully");
        return true;
    }

    public float ConvertToBrake(float inputAccel)
    {
            var max_brake_N = 44.0f; // Consider -2.0 m/s as max for Brake accel  [ N = mpa *(1/0.045) ]
            var min_brake_N = 0.0f;

            var brake_calc = 1833.0f *  inputAccel * 0.359f / 1400.0f * 1.1f * -1;  // Ref Matlap model for this calculation
            brake_calc = brake_calc * 22.2222f; // Convert mpa to N = mpa *(1/0.045)
            brake_calc = (brake_calc - min_brake_N) / (max_brake_N - min_brake_N); // convert to percentage
            brake_calc = Mathf.Clamp(brake_calc, (float)0, (float)1);
            //Debug.Log("acc : " + inputAccel + " Break: " + brake_calc);
            return brake_calc;
    }

    public float ConvertToThrottle(float currentSpeed, float inputAccel, float currentAccel)
    {
        float deltaAccel = 0.0f;
        float addSig = ((float)inputAccel - currentAccel);
        
        deltaAccel = 1.5f * addSig + 1.0f * addSig;
        deltaAccel = Mathf.Clamp(deltaAccel , -0.5f, 4.0f);

        SortedList<double, double> temp_pack = new SortedList<double, double>();
        temp_pack.Add(currentSpeed,  deltaAccel);

        return (float)Interpolate(temp_pack);

    }

    public double Interpolate(DataPair xy)
    {
        var index_last = xyz_.Count - 1; 
        double max_x = xyz_.Keys[index_last];
        double min_x = xyz_.Keys[0];
        if (xy.Keys[0] >= max_x - kDoubleEpsilon)
        {
            return InterpolateYz(xyz_.Values[index_last], xy.Values[0]);
        }
        if (xy.Keys[0] <= min_x + kDoubleEpsilon)
        {
            return InterpolateYz(xyz_.Values[0], xy.Values[0]);
        }

        List<double> xyz_keys = new List<double>(xyz_.Keys);
        int indexy = GetLowerBound(xyz_keys, xy.Keys[0]); 
        
        var itr_after = indexy;
        var itr_before = itr_after;
        if (itr_before != 0) --itr_before;

        double x_before = xyz_.Keys[itr_before];
        double z_before = InterpolateYz(xyz_.Values[itr_before], xy.Values[0]);
        double x_after =  xyz_.Keys[itr_after];
        double z_after = InterpolateYz(xyz_.Values[itr_after], xy.Values[0]);

        double x_diff_before = Math.Abs(xy.Keys[0] - x_before);
        double x_diff_after = Math.Abs(xy.Keys[0]- x_after);

        return InterpolateValue(z_before, x_diff_before, z_after, x_diff_after);
    }
    public double InterpolateYz(DataPair yz_table, double y)
    {
        if (yz_table.Count == 0)
        {
            //AERROR << "Unable to interpolateYz because yz_table is empty.";
            return y;
        }
        var index_lasty = yz_table.Count - 1; 
        double max_y = yz_table.Keys[index_lasty];
        double min_y = yz_table.Keys[0];

        if (y >= max_y - kDoubleEpsilon)
        {
            return yz_table.Values[index_lasty];
        }
        if (y <= min_y + kDoubleEpsilon)
        {
            return yz_table.Values[0];
        }

        List<double> yz_keys = new List<double>(yz_table.Keys);
        var indexy = GetLowerBound(yz_keys, y);
        
        var itr_after = indexy;
        var itr_before = itr_after;

        if (itr_before != 0)
        {
            --itr_before;
        }

        double y_before = yz_table.Keys[itr_before];
        double z_before = yz_table.Values[itr_before];
        double y_after = yz_table.Keys[itr_after];
        double z_after = yz_table.Values[itr_after];

        double y_diff_before = Math.Abs(y - y_before);
        double y_diff_after = Math.Abs(y - y_after);

        return InterpolateValue(z_before, y_diff_before, z_after, y_diff_after);
    }
    public double InterpolateValue(double value_before, double dist_before, double value_after, double dist_after)
    {
        if (dist_before < kDoubleEpsilon)
        {
            return value_before;
        }
        if (dist_after < kDoubleEpsilon)
        {
            return value_after;
        }
        double value_gap = value_after - value_before;
        double value_buff = value_gap * dist_before / (dist_before + dist_after);
        return value_before + value_buff;
    }

    private int GetLowerBound ( List<double> thisList, Double thisValue)
    {
        var lower = 0;
        var upper = thisList.Count;
        var index = 0;
        
        while ( (lower <= upper))
        {
            int comparisonResult = thisValue.CompareTo( thisList[index]);
            if (comparisonResult == 0) { return index; }

            if (comparisonResult < 0)
            {
                upper = index - 1;
            }
            else
            {
                lower = index + 1;
            } 
            index = (lower + upper) / 2; 
        }
        return lower;
    }
}
